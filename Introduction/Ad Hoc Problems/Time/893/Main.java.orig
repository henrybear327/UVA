/*
 * Sai Cheemalapati
 * UVA 893: Y3K problem
 *
 */
 
import java.util.Calendar;
import java.util.Scanner;
import java.io.*;
import java.util.*;
 
 
public class Main{
   public static void main(String[] args) {
      MyScanner sc = new MyScanner();
      out = new PrintWriter(new BufferedOutputStream(System.out));
      
      // Start writing your solution here.

	int f, d, m, y;
    Calendar calendar = Calendar.getInstance();
 
        for(;;) {
            f = sc.nextInt();
            d = sc.nextInt();
            m = sc.nextInt();
            y = sc.nextInt();
            if(f == 0 && d == 0 & m == 0 & y == 0) break;
 
            m--;
            calendar.set(y, m, d);
            calendar.add(Calendar.DAY_OF_YEAR, f);
 
            out.printf("%d %d %d\n",
                calendar.get(Calendar.DAY_OF_MONTH),
                calendar.get(Calendar.MONTH) + 1,
                calendar.get(Calendar.YEAR));
        }
   
      /*
      int n      = sc.nextInt();        // read input as integer
      long k     = sc.nextLong();       // read input as long
      double d   = sc.nextDouble();     // read input as double
      String str = sc.next();           // read input as String
      String s   = sc.nextLine();       // read whole line as String

      int result = 3*n;
      out.println(result);                    // print via PrintWriter
      */

      // Stop writing your solution here.
      out.close();
   }

   //PrintWriter for faster output
   public static PrintWriter out;
      
   //MyScanner class for faster input
   public static class MyScanner {
      BufferedReader br;
      StringTokenizer st;
 
      public MyScanner() {
         br = new BufferedReader(new InputStreamReader(System.in));
      }
 
      String next() {
          while (st == null || !st.hasMoreElements()) {
              try {
                  st = new StringTokenizer(br.readLine());
              } catch (IOException e) {
                  e.printStackTrace();
              }
          }
          return st.nextToken();
      }
 
      int nextInt() {
          return Integer.parseInt(next());
      }
 
      long nextLong() {
          return Long.parseLong(next());
      }
 
      double nextDouble() {
          return Double.parseDouble(next());
      }
 
      String nextLine(){
          String str = "";
	  try {
	     str = br.readLine();
	  } catch (IOException e) {
	     e.printStackTrace();
	  }
	  return str;
      }
   }
}


